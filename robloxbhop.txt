local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local plr = Players.LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")

-- main movement values
local baseSpeed = 17
local speedCap = 100
local decelRate = 50
local lowFriction = 0.7
local currSpeed = baseSpeed
local origProps = hrp.CustomPhysicalProperties or PhysicalProperties.new(0.7,0.3,0.5,1,1)
local slipProps = PhysicalProperties.new(origProps.Density, lowFriction, origProps.Elasticity,100,origProps.ElasticityWeight)

local velocity = Vector3.zero
local inputDir = Vector3.zero
local lastDir = Vector3.new(0,0,0)
local sliding = false

-- detect ground
local function onGround()
	local ray = Ray.new(hrp.Position, Vector3.new(0,-3,0))
	local part = workspace:FindPartOnRay(ray, char)
	return part ~= nil
end

-- PC input
UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.W then inputDir += Vector3.new(0,0,-1) end
	if input.KeyCode == Enum.KeyCode.S then inputDir += Vector3.new(0,0,1) end
	if input.KeyCode == Enum.KeyCode.A then inputDir += Vector3.new(-1,0,0) end
	if input.KeyCode == Enum.KeyCode.D then inputDir += Vector3.new(1,0,0) end
end)

UserInputService.InputEnded:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.W then inputDir -= Vector3.new(0,0,-1) end
	if input.KeyCode == Enum.KeyCode.S then inputDir -= Vector3.new(0,0,1) end
	if input.KeyCode == Enum.KeyCode.A then inputDir -= Vector3.new(-1,0,0) end
	if input.KeyCode == Enum.KeyCode.D then inputDir -= Vector3.new(1,0,0) end
end)

-- mobile input (thumbstick)
plr:GetPropertyChangedSignal("MoveDirection"):Connect(function()
	inputDir = plr.MoveDirection
end)

-- main heartbeat loop
RunService.Heartbeat:Connect(function(dt)
	local grounded = onGround()
	local camCF = workspace.CurrentCamera.CFrame
	local wishDir = (camCF.LookVector * inputDir.Z + camCF.RightVector * inputDir.X)
	if wishDir.Magnitude > 0 then wishDir = wishDir.Unit end

	local hzVel = Vector3.new(velocity.X,0,velocity.Z)

	-- air control (instant HL-style)
	if not grounded and wishDir.Magnitude > 0 then
		local speed = hzVel.Magnitude
		hzVel = wishDir * speed
	end

	-- ground control & friction
	if grounded then
		if wishDir.Magnitude > 0 then
			hzVel = wishDir * currSpeed
			lastDir = wishDir
			sliding = false
			hrp.CustomPhysicalProperties = origProps
		else
			if currSpeed > baseSpeed then
				if not sliding then
					sliding = true
					hrp.CustomPhysicalProperties = slipProps
					hzVel = lastDir * currSpeed
				end
				currSpeed = math.max(baseSpeed, currSpeed - decelRate * dt)
				if hzVel.Magnitude <= baseSpeed then
					sliding = false
					hrp.CustomPhysicalProperties = origProps
					currSpeed = baseSpeed
				end
			else
				sliding = false
				hrp.CustomPhysicalProperties = origProps
				hzVel = Vector3.new(0,0,0)
				currSpeed = baseSpeed
			end
		end
	end

	velocity = Vector3.new(hzVel.X, velocity.Y, hzVel.Z)

	-- gravity
	if not grounded then
		velocity += Vector3.new(0,-196.2,0) * dt
	else
		velocity = Vector3.new(velocity.X,0,velocity.Z)
	end

	-- update HRP position manually
	hrp.CFrame = hrp.CFrame + velocity * dt
end)
